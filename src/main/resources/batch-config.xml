<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
<!-- 	<context:property-placeholder location="classpath:db.properties"/> --> 
   
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSource"></property>
    </bean>
    
    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
    	<property name="dataSource" ref="dataSource"></property>
    	<property name="transactionManager" ref="transactionManager"></property>
    </bean>
    
    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
    	<property name="jobRepository" ref="jobRepository"></property>
    </bean>

	<batch:job id="myJob" restartable="true">
		<batch:step id="myStep" allow-start-if-complete="true">
			<batch:tasklet ref="myTasklet">
			</batch:tasklet>
		</batch:step>
	</batch:job>
	
	<batch:job id="myJob2" restartable="true">
		<batch:step id="myStep2" allow-start-if-complete="true">
			<batch:tasklet ref="myTasklet2">
			</batch:tasklet>
		</batch:step>
	</batch:job>
	
	<bean id="myTasklet" class="com.eai.springbatch.tasklet.MyTasklet">
		<!-- <property name="dataSource" ref="dataSource"></property> -->
		<property name="userDao" ref="userDao"></property>
	</bean>
	
	<bean id="myTasklet2" class="com.eai.springbatch.tasklet.MyTasklet2">
		<!-- <property name="dataSource" ref="dataSource"></property> -->
		<property name="userDao" ref="userDao"></property>
	</bean>
	
	<batch:job id="job3">  
      <batch:step id="step3">  
        <batch:tasklet >  
          <batch:chunk reader="csvItemReader"  processor="csvItemProcessor"   writer="csvItemWriter"  commit-interval="1">  
             </batch:chunk>  
          </batch:tasklet>  
        </batch:step>  
    </batch:job>  
    <bean id="csvItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">  
        <property name="resource" value="classpath:inputFile.csv"/>  
        <property name="lineMapper" ref="dlmaper"/>  
    </bean>  
    <bean id="dlmaper" class="org.springframework.batch.item.file.mapping.DefaultLineMapper">  
      <property name="lineTokenizer" ref="lineTokenizer"/>  
      <property name="fieldSetMapper" >  
        <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">  
            <property name="prototypeBeanName" value="student"/>  
        </bean>  
      </property>  
    </bean>  
    <bean id="student" class="com.eai.springbatch.model.Student"/>  
    <bean id="lineTokenizer" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer" >  
        <property name="delimiter" value=","/>  
        <property name="names" >  
            <list>  
                <value>id</value>  
                <value>name</value>  
                <value>age</value>  
                <value>score</value>  
            </list>  
        </property>  
    </bean>  
    <bean id="csvItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">  
      <property name="resource" value="classpath:outputFile.csv"/>  
      <property name="lineAggregator">  
        <bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">  
           <property name="delimiter" value=","/>  
           <property name="fieldExtractor">  
              <bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">  
                  <property name="names" value="name,age,scope"/>  
              </bean>  
           </property>  
         </bean>  
        </property>  
    </bean>
	

</beans>
